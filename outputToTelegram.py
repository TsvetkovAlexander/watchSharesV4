import datetime
import os
import utils
import telebot

# –£–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
API_TOKEN = os.environ['API_TOKEN']

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(API_TOKEN)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –∫–∞–Ω–∞–ª Telegram


async def print_anomal_volume(client, ticker, marketdata,
                              volume,
                              figi_current,
                              arr_times_direction,
                              arr_times_figi_volume,
                              old_arr_times_direction, old_time_for_direction,medium_price,name,holidays,lot,
                              times, storage_volume,storage_volumeRub):

    current_time = datetime.datetime.now().time()
    tmp_buy = 0
    tmp_sell = 0
    # print("storage_volume",storage_volume)
    lastPrice, todayOpenPrice = await utils.find_prices(figi_current, marketdata,
                                                        arr_times_figi_volume,medium_price,holidays,
                                                        client)


    Price_Now = utils.cast_money(lastPrice.last_prices[0].price)
    Price_candel_Open = utils.cast_money(marketdata.candle.open)
    # print(marketdata.candle,"marketdata.candle")
    # print(todayOpenPrice,ticker,"todayOpenPrice")

    Price_candel_Open_today = utils.cast_money(todayOpenPrice.candles[0].close)
    # print(todayOpenPrice.candles[0].close, "todayOpenPrice.candles[0].close")
    # print(Price_candel_Open_today, "Price_candel_Open_today")
    percentage_change = utils.compare_numbers(Price_Now, Price_candel_Open)
    percentage_change_today = utils.compare_numbers(Price_Now, Price_candel_Open_today)

    # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –º–∏–Ω—É—Ç–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
    if marketdata.candle.time.minute == old_time_for_direction:
        for i, el in enumerate(old_arr_times_direction):
            if el[0] == marketdata.candle.figi:
                tmp_buy = el[1]
                tmp_sell = el[2]
                # –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–∫–µ, –Ω—É–∂–Ω–æ –∑–∞–Ω–æ–≤–æ –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞—Ç—å % –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–±—å–µ–º–∞
                old_arr_times_direction[i][1] = 0
                # –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–∫–µ, –Ω—É–∂–Ω–æ –∑–∞–Ω–æ–≤–æ –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞—Ç—å % –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–±—å–µ–º–∞
                old_arr_times_direction[i][2] = 0
                # print(tmp_buy, "tmp_buy")
                # print(tmp_sell, "tmp_sell")
    else:
        for i, el in enumerate(arr_times_direction):
            if el[0] == marketdata.candle.figi:
                tmp_buy = el[1]
                tmp_sell = el[2]
                # –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–∫–µ, –Ω—É–∂–Ω–æ –∑–∞–Ω–æ–≤–æ –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞—Ç—å % –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–±—å–µ–º–∞
                arr_times_direction[i][1] = 0
                # –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–∫–µ, –Ω—É–∂–Ω–æ –∑–∞–Ω–æ–≤–æ –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞—Ç—å % –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–±—å–µ–º–∞
                arr_times_direction[i][2] = 0
                # print(tmp_buy, "tmp_buy")
                # print(tmp_sell, "tmp_sell")
    total_volume = tmp_buy + tmp_sell
    if total_volume > 0:
        buy_percentage = round(tmp_buy / total_volume * 100)
        sell_percentage = round(tmp_sell / total_volume * 100)
    else:
        buy_percentage = 0
        sell_percentage = 0

    if buy_percentage > sell_percentage:
        # –ü–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ "–ø–æ–∫—É–ø–∫–∞"
        buy_text = "\u0332".join("–ø–æ–∫—É–ø–∫–∞")
        sell_text = "–ø—Ä–æ–¥–∞–∂–∞"
    elif sell_percentage > buy_percentage:
        # –ü–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ "–ø—Ä–æ–¥–∞–∂–∞"
        buy_text = "–ø–æ–∫—É–ø–∫–∞"
        sell_text = "\u0332".join("–ø—Ä–æ–¥–∞–∂–∞")
    else:
        # –ï—Å–ª–∏ —Ü–∏—Ñ—Ä—ã —Ä–∞–≤–Ω—ã, –Ω–µ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–µ–º –Ω–∏—á–µ–≥–æ
        buy_text = "–ø–æ–∫—É–ø–∫–∞"
        sell_text = "–ø—Ä–æ–¥–∞–∂–∞"
    # print("marketdata",marketdata.candle)
    channel_id = -1002135757850
    if total_volume != 0:
        # print(marketdata.candle.volume, "marketdata.candle.volume")
        # print(storage_volume, "storage_volume")
        # print(marketdata.candle.volume - storage_volume, "marketdata.candle.volume - storage_volume")
        # print(storage_volume,"storage_volume")
        # print(marketdata.candle, "marketdata.candle.volume")
        # print(storage_volume, "storage_volume:", volume, "–û–±—å–µ–º:",storage_volumeRub, "storage_volumeRub", marketdata.candle.volume, "marketdata.candle.volume")

         # –ê–π–¥–∏ –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞
        def arrow(buy_percentage, sell_percentage):
            if buy_percentage > sell_percentage:
                return "‚¨ÜÔ∏è"
            elif buy_percentage == sell_percentage:
                return "‚¨ÜÔ∏è‚¨áÔ∏è"
            else:
                return "‚¨áÔ∏è"
            # –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞

        arrow_symbol = arrow(buy_percentage, sell_percentage)

        # –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞

        # –°–æ—Å—Ç–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∂–µ–ª–∞–µ–º—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
        message = (arrow_symbol + " " + "#" + ticker + " " + str(
                    round(float((marketdata.candle.volume * medium_price *lot - storage_volumeRub) / 1000000), 2)) + "M‚ÇΩ " +
                   str(percentage_change) + "%" + '\n' +
                   name + '\n' +
                   "–û–±—ä—ë–º: " + str(
                    round(float((marketdata.candle.volume * medium_price*lot  - storage_volumeRub) / 1000000), 2)) + "M‚ÇΩ (" +
                   str(marketdata.candle.volume - storage_volume) + " –ª–æ—Ç–æ–≤)" + '\n' +
                   "–ü–æ–∫—É–ø–∫–∞: " + str(buy_percentage) + "% –ü—Ä–æ–¥–∞–∂–∞: " + str(sell_percentage) + "%" + '\n' +
                   "–¶–µ–Ω–∞: " + str(Price_Now) + "‚ÇΩ" + '\n' +
                   "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã:" + '\n' +
                   "    –Ω–∞ –æ–±—ä–µ–º–µ: " + str(percentage_change) + "%" + '\n' +
                   "    –∑–∞ —Å–µ–≥–æ–¥–Ω—è: " + str(percentage_change_today) + "%" + '\n' +
                   "–í—Ä–µ–º—è: " + str(datetime.datetime.now().replace(microsecond=0)) + '\n' +
                   "üî∑ –ê–Ω–æ–º–∞–ª—å–Ω—ã–π –æ–±—ä–µ–º")

        bot.send_message(channel_id, message)

        print(message)
        # print(ticker, " ", name,'\n',
        #       "–ø–æ—Ä–æ–≥–æ–≤—ã–π –æ–±—å–µ–º:", volume, "–û–±—å–µ–º:",
        #       float(round(float((marketdata.candle.volume * medium_price  - storage_volumeRub) / 100))) / 10, "M‚ÇΩ",
        #       "(", (marketdata.candle.volume - storage_volume), "–ª–æ—Ç–æ–≤)", '\n',
        #       "—á–∏—Å–ª–æ —Ä–∞–∑ –∑–∞ –º–∏–Ω—É—Ç—É:", times + 1, '\n',
        #       "—Ç–µ–∫—É—â–∞—è —Ü–µ–Ω–∞:", Price_Now, '\n',
        #       "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã:", '\n'
        #                          "  –Ω–∞ –æ–±—ä–µ–º–µ:", percentage_change, "%", '\n',
        #       "  –∑–∞ –¥–µ–Ω—å:", percentage_change_today, "%", '\n',
        #       f"{buy_text}: {buy_percentage}%, {sell_text}: {sell_percentage}%",
        #       "–í—Ä–µ–º—è:", datetime.datetime.now().replace(microsecond=0))

    else:
        message = ("#" + ticker + " " + str(
            round(float((marketdata.candle.volume * medium_price*lot - storage_volumeRub) / 1000000), 2)) + "M‚ÇΩ " +
                   str(percentage_change) + "%" + '\n' +

                   name + '\n' +
                   "–û–±—ä—ë–º: " + str(
                    round(float((marketdata.candle.volume * medium_price*lot  - storage_volumeRub) / 1000000), 2)) + "M‚ÇΩ (" +
                   str(marketdata.candle.volume - storage_volume) + " –ª–æ—Ç–æ–≤)" + '\n' +
                   # "–ü–æ–∫—É–ø–∫–∞: " + str(buy_percentage) + "% –ü—Ä–æ–¥–∞–∂–∞: " + str(sell_percentage) + "%" + '\n' +
                   # "–¶–µ–Ω–∞: " + str(Price_Now) + "‚ÇΩ" + '\n' +
                   "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—Ä–æ–ø–æ—Ä—Ü–∏—é –ø–æ–∫—É–ø–∫–∏ –∏ –ø—Ä–æ–¥–∞–∂–∏"'\n'
                   "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã:" + '\n' +
                   "    –Ω–∞ –æ–±—ä–µ–º–µ: " + str(percentage_change) + "%" + '\n' +
                   "    –∑–∞ —Å–µ–≥–æ–¥–Ω—è: " + str(percentage_change_today) + "%" + '\n' +
                   "–í—Ä–µ–º—è: " + str(datetime.datetime.now().replace(microsecond=0))+'\n' +
                   "üî∑ –ê–Ω–æ–º–∞–ª—å–Ω—ã–π –æ–±—ä–µ–º"
                   )

        bot.send_message(channel_id, message)
        print(message)
